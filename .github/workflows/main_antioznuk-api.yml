# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - antioznuk-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Update appsettings.json
        run: |
              cd IIS_SERVER/IIS_SERVER
              jq --arg jwtSecret "${{ secrets.JWT_SECRET_SECRET }}" \
                '.jwt_secret = $jwtSecret' \
                appsettings.json > appsettings.json.tmp
              mv appsettings.json.tmp appsettings.json

              jq --arg jwtSecret "${{ secrets.JWT_ISSUER_SECRET }}" \
                '.jwt_issuer = $jwtSecret' \
                appsettings.json > appsettings.json.tmp
              mv appsettings.json.tmp appsettings.json

              jq --arg jwtSecret "${{ secrets.JWT_AUDIENCE_SECRET }}" \
                '.jwt_audience = $jwtSecret' \
                appsettings.json > appsettings.json.tmp
              mv appsettings.json.tmp appsettings.json

              jq --arg jwtSecret "${{ secrets.DB_CONNECTION_STRING_SECRET }}" \
                '.DB_ConnectionString = $jwtSecret' \
                appsettings.json > appsettings.json.tmp
              mv appsettings.json.tmp appsettings.json

              jq --arg jwtSecret "${{ secrets.SALT_SECRET }}" \
                '.salt = $jwtSecret' \
                appsettings.json > appsettings.json.tmp
              mv appsettings.json.tmp appsettings.json

              jq --arg jwtSecret "${{ secrets.MAIL_SECRET }}" \
                '.mail = $jwtSecret' \
                appsettings.json > appsettings.json.tmp
              mv appsettings.json.tmp appsettings.json

              jq --arg jwtSecret "${{ secrets.MAIL_PASSWORD_SECRET }}" \
                '.mail_password = $jwtSecret' \
                appsettings.json > appsettings.json.tmp
              mv appsettings.json.tmp appsettings.json

              cat appsettings.json

          
      - name: Build with dotnet
        run: |
              cd IIS_SERVER
              ls
              dotnet build --configuration Release

      - name: dotnet publish
        run: |
              cd IIS_SERVER
              dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'antioznuk-api'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DE3E68933B8B45369E65332F1E82DCF9 }}
